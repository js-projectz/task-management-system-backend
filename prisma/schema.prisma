generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  email        String   @unique
  passwordHash String
  role         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  tasks         Task[]         @relation("AssignedTasks")
  activityLogs  ActivityLog[]
  notifications Notification[]
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdBy   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tasks       Task[]
  ActivityLog ActivityLog[]
}

model Task {
  id          Int       @id @default(autoincrement())
  projectId   Int
  title       String
  description String?
  status      String
  priority    String
  dueDate     DateTime?
  createdBy   Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  assignees    User[]        @relation("AssignedTasks")
  Project      Project       @relation(fields: [projectId], references: [id])
  activityLogs ActivityLog[]
}

model ActivityLog {
  id          Int      @id @default(autoincrement())
  userId      Int
  taskId      Int?
  projectId   Int?
  action      String
  description String?
  timestamp   DateTime @default(now())

  user    User     @relation(fields: [userId], references: [id])
  task    Task?    @relation(fields: [taskId], references: [id])
  project Project? @relation(fields: [projectId], references: [id])
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}
